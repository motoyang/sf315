# project(uvbook-examples)

# 设置生成的库文件目录
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
# 设置可执行文件目录
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

set(UV_LIB "uv")
set(PTHREAD_LIB "pthread")

macro (example_build arg1)
  set(EXAMPLE_TARGET ${arg1})
  file(GLOB EXAMPLE_SRC_FILES "${EXAMPLE_TARGET}/*.cpp")   
  add_executable(${EXAMPLE_TARGET} ${EXAMPLE_SRC_FILES})
  target_link_libraries(${EXAMPLE_TARGET} ${UV_LIB} ${PTHREAD_LIB})
endmacro (example_build)

example_build(helloworld)
example_build(idle-basic) 
example_build(idle-compute)
example_build(uvcat)
example_build(uvtee)
example_build(onchange)
example_build(tcp-echo-server)
example_build(tcp-echo-client)
example_build(interfaces)
example_build(udp-dhcp)
example_build(dns)
example_build(thread-create)
example_build(locks)
example_build(queue-work)
example_build(queue-cancel)
example_build(progress)
example_build(spawn)
example_build(detach)
example_build(signal)
example_build(proc-streams)
add_executable(proc-test "proc-streams/test.c")
example_build(cgi)
add_executable(tick "cgi/tick.c")
example_build(pipe-echo-server)
example_build(pipe-echo-client)
example_build(multi-echo-server)
example_build(multi-echo-worker)
example_build(uvstop)
example_build(ref-timer)
example_build(plugin)
add_library(hello SHARED "lib-hello/hello.cpp")
example_build(tty)
example_build(tty-gravity)
